---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: swiftproxies.swift.openstack.org
spec:
  group: swift.openstack.org
  names:
    kind: SwiftProxy
    listKind: SwiftProxyList
    plural: swiftproxies
    singular: swiftproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SwiftProxy is the Schema for the swiftproxies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SwiftProxySpec defines the desired state of SwiftProxy
            properties:
              containerImageMemcached:
                description: Image URL for Memcache servicd
                type: string
              containerImageProxy:
                description: Swift Proxy Container Image URL
                type: string
              passwordSelectors:
                description: PasswordSelector - Selector to choose the Swift user
                  password from the Secret
                properties:
                  admin:
                    default: SwiftPassword
                    description: Database - Selector to get the Swift service password
                      from the Secret
                    type: string
                  transportUrl:
                    default: TransportURL
                    description: Database - Selector to get the Swift service password
                      from the Secret
                    type: string
                type: object
              replicas:
                default: 1
                description: Replicas of Swift Proxy
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              ringConfigMap:
                description: Name of ConfigMap containing Swift rings
                type: string
              secret:
                description: Secret containing OpenStack password information for
                  Swift service user password
                type: string
              serviceUser:
                default: swift
                description: ServiceUser - optional username used for this service
                  to register in Swift
                type: string
              swiftConfSecret:
                description: Name of Secret containing swift.conf
                type: string
            required:
            - containerImageMemcached
            - containerImageProxy
            type: object
          status:
            description: SwiftProxyStatus defines the observed state of SwiftProxy
            properties:
              apiEndpoints:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: API endpoints
                type: object
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
